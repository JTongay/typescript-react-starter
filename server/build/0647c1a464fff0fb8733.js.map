{"version":3,"sources":["webpack:///./app/sections/login/login.tsx"],"names":["__webpack_require__","r","__webpack_exports__","_material_ui_core__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_1__","react_hooks_fetch__WEBPACK_IMPORTED_MODULE_2__","socket_io_client__WEBPACK_IMPORTED_MODULE_3__","LoginData","data","error","Object","Error","message","props","socket","setData","on","res","className","variant","color","hello","fallback"],"mappings":"0FAAAA,EAAAC,EAAAC,GAAA,IAAAC,EAAAH,EAAA,KAAAI,EAAAJ,EAAA,GAAAK,EAAAL,EAAA,KAAAM,EAAAN,EAAA,KAKA,MAAMO,EAAsB,KAC1B,MAAMC,KAAEA,EAAIC,MAAEA,GAAUC,OAAAL,EAAA,EAAAK,CAAS,8BACjC,GAAID,EAEF,MAAME,QAER,OAAKH,EAGEJ,EAAA,0BAAOI,EAAKI,SAFV,MA8BIV,EAAA,QAxBeW,IAC5B,MAAMC,EAASR,EAAe,0BACvBE,EAAMO,GAAWX,EAAA,WAIxB,OAHAA,EAAA,UAAgB,KACdU,EAAOE,GAAG,OAASC,GAAaF,EAAQE,MAGxCb,EAAA,yBAASc,UAAU,gBACjBd,EAAA,cAACD,EAAA,EAAU,CAACgB,QAAQ,KAAKC,MAAM,WAAS,SAGxChB,EAAA,cAACA,EAAA,WAAgB,KACdI,EACGJ,EAAA,gDAA0BI,EAAKa,OAC/BjB,EAAA,qCAEJA,EAAA,cAACA,EAAA,SAAc,CAACkB,SAAUlB,EAAA,yCACxBA,EAAA,cAACG,EAAS","file":"0647c1a464fff0fb8733.js","sourcesContent":["import { Typography } from '@material-ui/core';\nimport * as React from 'react';\nimport { useFetch } from 'react-hooks-fetch';\nimport * as SocketIOClient from 'socket.io-client';\n\nconst LoginData: React.FC = () => {\n  const { data, error } = useFetch('http://localhost:4200/test');\n  if (error) {\n    // Set up your error boundary and throw that error here\n    throw Error();\n  }\n  if (!data) {\n    return null;\n  }\n  return <span>{data.message}</span>;\n  // throw Error();\n};\n\nconst Login: React.FC<any> = (props) => {\n  const socket = SocketIOClient('http://localhost:4200');\n  const [data, setData] = React.useState();\n  React.useEffect(() => {\n    socket.on('test', (res: any) => setData(res));\n  });\n  return (\n    <section className=\"home-section\">\n      <Typography variant=\"h1\" color=\"primary\">\n        Login\n      </Typography>\n      <React.StrictMode>\n        {data\n          ? <p>Got data from socket! {data.hello}</p>\n          : <p>Loading...</p>\n        }\n        <React.Suspense fallback={<span>loading...</span>}>\n          <LoginData />\n        </React.Suspense>\n      </React.StrictMode>\n    </section>\n  );\n};\n\nexport default Login;\n"],"sourceRoot":""}